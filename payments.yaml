- name: payment microservice
  hosts: all
  become: yes
  tasks:
  - name: payments in roboshop
    ansible.builtin.yum:
      name: "{{items}}"
    loop:
    - python36
    - gcc
    - python3-devel
  - name: create a user if not exists
    ansible.builtin.user:
      name: roboshop
      register: out
      ignore_errors: true
  - when: out.rc !==0
    name: display user
    ansible.builtin.user:
      name: roboshop
  - name: check /app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: Download the application code to created app directory
    ansible.builtin.command: curl -L -o /tmp/payment.zip https://roboshop-builds.s3.amazonaws.com/payment.zip
    args: 
      chdir: /app
  - name: unzip the payment 
    ansible.builtin.unarchive:
      src: /tmp/payment.zip
      dest: /app/
      args:
        chdir: /app
  - name: download dependencies
    ansible.builtin.shell:  pip3.6 install -r requirements.txt
    args:
      chdir: /app  
  - name: payment service
    ansible.builtin.copy:
      src: payment.service
      dest: vim /etc/systemd/system/payment.service
  
  - name: reload service
    ansible.builtin.systemd:
      name: payment.service
      daemon_reload: true
  - name: start the service
    ansible.builtin.service:
      name: payment.service
      enabled: true
      state: started


        